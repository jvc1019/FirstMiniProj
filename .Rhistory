install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z* 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c (0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z* 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- list.files
old.dir <- getwd()
dir.create(testdir)
dir.create()
testdir.create()
info()
getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
file.path(dir.create("testdir2"),dir.create("testdir3")
)
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
old.dir
setwd(old.dir)
1:20
pi:10
15:1
?:
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
re(0, times = 40)
rep(0, time = 40)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
library(swirl)
ls()
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
TRUE FALSE FALSE FALSE
1 0 0 0
true
c(TRUE, FALSE, FALSE, FALSE)
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Jayvee")
my_name <- c(my_char, "Jayvee")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
c(x[3,5,7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(4, 5, 1:20)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(cnames, my_data)
colnames(cnames)
colnames(my_data) <- cnames
my_data
setwd("~/Desktop/New folder")
setwd("://C")
getwd()
cd ..
setwd(~User/Desktop)
setwd("~User/Desktop")
setwd("C:/Users/User/Desktop/New folder")
cls
clear
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean
setwd("C:/Users/User/Desktop/New folder/pollutantmean.R")
pollutantmean.R
Castaneda_J_FirstMiniProj.R
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean
Castaneda_J_FirstMiniProj.R
pollutantmean("specdata", "nitrate", 70:72)
list.files("C:/Users/User/Desktop/New folder/specdata"
y]
Castaneda_J_FirstMiniProj.R
rm(list = ls())
setwd("C:\Users\User\Desktop\New folder")
setwd("C:/Users/User/Desktop/New folder")
getwd()
pollutantmean(i,j,k)
source("C:/Users/User/Desktop/New folder/Castaneda_J_FirstMiniProj.R")
source("C:/Users/User/Desktop/New folder/Castaneda_J_FirstMiniProj.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 23)
source("C:/Users/User/Desktop/New folder/Castaneda_J_FirstMiniProj.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25
)
complete("specdata", 3)
source("C:/Users/User/Desktop/New folder/corr.R")
source("C:/Users/User/Desktop/New folder/Castaneda_J_FirstMiniProj.R")
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr); summary(cr)
hist(outcome[, 11])
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
Deaths <- as.numeric(outcome[, 11])
hist(Deaths)
hist(Deaths,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
hist(Deaths,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
Deaths <- as.numeric(!is.na(outcome[, 11]))
hist(Deaths,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
Deaths <- as.numeric((outcome[, 11])
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
Deaths <- as.numeric((outcome[, 11])
hist(Deaths,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
Deaths <- as.numeric((outcome[, 11])
hist(Deaths,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
Deaths <- as.numeric(outcome[, 11])
hist(Deaths,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
hist(mortalityrates,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
mortalityrates <- as.numeric(outcome[, 11])
hist(mortalityrates,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
pollutantmean <- function(directory, pollutant, id = 1:332){
# set working directory when directory is "specdata"
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# find all files in the "specdata" folder
files <- as.character(list.files(directory))
file_paths <- paste(directory, files, sep = "")
dataset <- c() #Initialized dataset
#Go through each file
for (i in id){
current <- read.csv(file_paths[i], header=T, sep=",")
head(current)
pollutant
# when data is NA, remove them from dataset
na_removed <- current[!is.na(current[, pollutant]), pollutant]
dataset <- c(dataset, na_removed)
}
# # Compute and return mean
result.mean <-  mean(dataset)
return(result.mean)
}
source("C:/Users/User/Desktop/New folder/FirstMiniProj.R")
source("C:/Users/User/Desktop/New folder/FirstMiniProj.R")
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
#
pollutantmean <- function(directory, pollutant, id = 1:332){
# set working directory when directory is "specdata"
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# find all files in the "specdata" folder
files <- as.character(list.files(directory))
file_paths <- paste(directory, files, sep = "")
dataset <- c() #Initialized dataset
# Go through each file
for (i in id){
current <- read.csv(file_paths[i], header=T, sep=",")
head(current)
pollutant
# when data is NA, remove them from dataset
na_removed <- current[!is.na(current[, pollutant]), pollutant]
dataset <- c(dataset, na_removed)
}
# # Compute and return mean
result.mean <-  mean(dataset)
return(result.mean)
}
complete <- function(directory, id = 1:332) {
# set working directory when directory is "specdata"
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# find the length of id vector
id_len <- length(id)
complete_data <- rep(0, id_len)
# find all files in the "specdata" folder
files <- as.character( list.files(directory) )
file_paths <- paste(directory, files, sep="")
# go through each file to add to complete data
j <- 1
for (i in id) {
current <- read.csv(file_paths[i], header=T, sep=",")
complete_data[j] <- sum(complete.cases(current))
j <- j + 1
}
# store and return result
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
corr <- function(directory, threshold = 0) {
# set working directory when directory is "specdata"
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# find the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the "specdata" directory
files <- as.character( list.files(directory) )
file_paths <- paste(directory, files, sep="")
j <- 1
# go through each file to find the correlation
for(i in ids) {
current <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current$sulfate, current$nitrate, use="complete.obs")
j <- j + 1
}
# store and return result
result <- corr_vector
return(result)
}
## Problem 4: Hospital 30-Day Death (Mortality) Rates from Heart Attack
# Read data from file
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
# Take only the data for Column 11 (which contains the mortality rates from heart attack)
mortalityrates <- outcome[, 11])
# Convert character data to numerics
num_version <- as.numeric(mortalityrates)
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
# Take only the data for Column 11 (which contains the mortality rates from heart attack)
mortalityrates <- outcome[, 11]
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
# Take only the data for Column 11 (which contains the mortality rates from heart attack)
mortalityrates <- outcome[, 11]
# Convert character data to numerics
num_version <- as.numeric(mortalityrates)
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
# Take only the data for Column 11 (which contains the mortality rates from heart attack)
mortalityrates <- outcome[, 11]
# Convert character data to numerics
num_version <- as.numeric(mortalityrates)
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan"())
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
# Take only the data for Column 11 (which contains the mortality rates from heart attack)
mortalityrates <- outcome[, 11]
# Convert character data to numerics
num_version <- as.numeric(mortalityrates)
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack",
xlab = "Deaths",
col = "cyan")
# Create histogram from the num_version of data
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack", # Main title
xlab = "Deaths", # Label for x-axis
col = "cyan") # color of bars
source("C:/Users/User/Desktop/New folder/FirstMiniProj.R")
source("C:/Users/User/Desktop/New folder/FirstMiniProj.R")
# Convert character data to numerics
num_version <- as.numeric(mortalityrates)
# Create histogram from the num_version of data
hist(num_version,
main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack", # Main title
xlab = "Deaths", # Label for x-axis
col = "cyan") # color of bars
hist_plot
source("C:/Users/User/Desktop/New folder/FirstMiniProj.R")
hist_plot()
